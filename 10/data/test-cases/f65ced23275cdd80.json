{
  "uid" : "f65ced23275cdd80",
  "name" : "Added Spending In Database[1000.26 Rub Id=None Name='\\U0423\\U043D\\U0438\\U043A\\U0430\\U043B\\U044C\\U043D\\U043E\\U0435' Username=None Archived=False \\U0423\\U043D\\U0438\\U043A\\U0430\\U043B\\U044C\\U043D\\U044B\\U0435 \\U0448\\U043B\\U044F\\U043F\\U044B]",
  "fullName" : "tests.database.test_spendings_db.TestSpendingsDatabase#test_added_spending_in_database",
  "historyId" : "0b8ce161e16c610d697bb5b17c68ef2a",
  "time" : {
    "start" : 1756580102548,
    "stop" : 1756580102693,
    "duration" : 145
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL spendDate записывается в БД с ошибкой, добавляется +1 день\n\nAssertionError: assert datetime.date(2009, 10, 14) == datetime.date(2009, 10, 13)\n +  where datetime.date(2009, 10, 14) = Spend(id=UUID('6ddf810c-f660-4cb1-b052-8d387d4ad011'), description='Уникальные шляпы', spend_date=datetime.date(2009, 10, 14), amount=1000.26, username='niffler_qa', category_id=UUID('11fea4a0-f4a8-4a68-bfbb-d582108a4bee'), currency='RUB').spend_date\n +  and   datetime.date(2009, 10, 13) = <built-in method date of datetime.datetime object at 0x7f0470659500>()\n +    where <built-in method date of datetime.datetime object at 0x7f0470659500> = datetime.datetime(2009, 10, 13, 22, 5, 31, tzinfo=datetime.timezone.utc).date\n +      where datetime.datetime(2009, 10, 13, 22, 5, 31, tzinfo=datetime.timezone.utc) = <built-in method fromisoformat of type object at 0x7f047533b020>('2009-10-13T22:05:31.000+00:00')\n +        where <built-in method fromisoformat of type object at 0x7f047533b020> = datetime.fromisoformat\n +        and   '2009-10-13T22:05:31.000+00:00' = SpendAdd(id=None, amount=1000.26, description='Уникальные шляпы', category=CategoryAdd(id=None, name='Уникальное', username=None, archived=False), spendDate='2009-10-13T22:05:31.000+00:00', currency='RUB', username='niffler_qa').spendDate",
  "statusTrace" : "self = <tests.database.test_spendings_db.TestSpendingsDatabase object at 0x7f04707f25d0>\nspends_client = <clients.spends_client.SpendsClient object at 0x7f047263d010>\nspending_data = SpendAdd(id=None, amount=1000.26, description='Уникальные шляпы', category=CategoryAdd(id=None, name='Уникальное', username=None, archived=False), spendDate='2009-10-13T22:05:31.000+00:00', currency='RUB', username='niffler_qa')\nspends_db = <databases.spends_db.SpendsDb object at 0x7f047044be00>\n\n    @TestData.spending_data([\n        SpendAdd(\n            amount=1000.26,\n            category=CategoryAdd(name=\"Уникальное\"),\n            currency=\"RUB\",\n            description=\"Уникальные шляпы\",\n            spendDate=\"2009-10-13T22:05:31.000+00:00\"\n        )\n    ])\n    @pytest.mark.xfail(reason=\"spendDate записывается в БД с ошибкой, добавляется +1 день\")\n    @allure.story(Story.add_spending)\n    def test_added_spending_in_database(\n        self,\n        spends_client: SpendsClient,\n        spending_data: SpendAdd,\n        spends_db: SpendsDb\n    ):\n        added_spending = spends_client.add_spending(data=spending_data)\n        user_spending = spends_db.get_spending_by_id(id=added_spending.id)\n        with allure.step(f\"Проверка, что расход есть в базе данных\"):\n            assert user_spending is not None\n            assert user_spending.amount == spending_data.amount\n            assert user_spending.currency == spending_data.currency\n            assert user_spending.description == spending_data.description\n>           assert user_spending.spend_date == datetime.fromisoformat(spending_data.spendDate).date()\nE           AssertionError: assert datetime.date(2009, 10, 14) == datetime.date(2009, 10, 13)\nE            +  where datetime.date(2009, 10, 14) = Spend(id=UUID('6ddf810c-f660-4cb1-b052-8d387d4ad011'), description='Уникальные шляпы', spend_date=datetime.date(2009, 10, 14), amount=1000.26, username='niffler_qa', category_id=UUID('11fea4a0-f4a8-4a68-bfbb-d582108a4bee'), currency='RUB').spend_date\nE            +  and   datetime.date(2009, 10, 13) = <built-in method date of datetime.datetime object at 0x7f0470659500>()\nE            +    where <built-in method date of datetime.datetime object at 0x7f0470659500> = datetime.datetime(2009, 10, 13, 22, 5, 31, tzinfo=datetime.timezone.utc).date\nE            +      where datetime.datetime(2009, 10, 13, 22, 5, 31, tzinfo=datetime.timezone.utc) = <built-in method fromisoformat of type object at 0x7f047533b020>('2009-10-13T22:05:31.000+00:00')\nE            +        where <built-in method fromisoformat of type object at 0x7f047533b020> = datetime.fromisoformat\nE            +        and   '2009-10-13T22:05:31.000+00:00' = SpendAdd(id=None, amount=1000.26, description='Уникальные шляпы', category=CategoryAdd(id=None, name='Уникальное', username=None, archived=False), spendDate='2009-10-13T22:05:31.000+00:00', currency='RUB', username='niffler_qa').spendDate\n\ntests/database/test_spendings_db.py:50: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "[S] Client Envs",
    "time" : {
      "start" : 1756580100017,
      "stop" : 1756580100018,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "47205af187b5c804",
      "name" : "client_envs.json",
      "source" : "47205af187b5c804.json",
      "type" : "application/json",
      "size" : 66
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "[S] Spends Db",
    "time" : {
      "start" : 1756580100034,
      "stop" : 1756580100097,
      "duration" : 63
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "[S] Userdata Db",
    "time" : {
      "start" : 1756580100098,
      "stop" : 1756580100098,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "[S] Auth Api Token",
    "time" : {
      "start" : 1756580100599,
      "stop" : 1756580101745,
      "duration" : 1146
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "API Регистрация пользователя",
      "time" : {
        "start" : 1756580100599,
        "stop" : 1756580100926,
        "duration" : 327
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "GET /register",
        "time" : {
          "start" : 1756580100615,
          "stop" : 1756580100641,
          "duration" : 26
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "a705419474bb3dba",
          "name" : "Request",
          "source" : "a705419474bb3dba.html",
          "type" : "text/html",
          "size" : 1353
        }, {
          "uid" : "a7085dedb0c87638",
          "name" : "Response text 200",
          "source" : "a7085dedb0c87638.txt",
          "type" : "text/plain",
          "size" : 3731
        }, {
          "uid" : "d89e026016927ac0",
          "name" : "Response headers 200",
          "source" : "d89e026016927ac0.json",
          "type" : "application/json",
          "size" : 603
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 3,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "POST /register",
        "time" : {
          "start" : 1756580100649,
          "stop" : 1756580100926,
          "duration" : 277
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "5fe232d3f9c407f3",
          "name" : "Request",
          "source" : "5fe232d3f9c407f3.html",
          "type" : "text/html",
          "size" : 2184
        }, {
          "uid" : "e218cc1a1b10fa63",
          "name" : "Response text 400",
          "source" : "e218cc1a1b10fa63.txt",
          "type" : "text/plain",
          "size" : 3800
        }, {
          "uid" : "ca614ad5ec51ff3b",
          "name" : "Response headers 400",
          "source" : "ca614ad5ec51ff3b.json",
          "type" : "application/json",
          "size" : 553
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 3,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "username",
        "value" : "'niffler_qa'"
      }, {
        "name" : "password",
        "value" : "'password'"
      } ],
      "stepsCount" : 2,
      "attachmentsCount" : 6,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "API Авторизация и получение токена",
      "time" : {
        "start" : 1756580100926,
        "stop" : 1756580101744,
        "duration" : 818
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "GET /oauth2/authorize",
        "time" : {
          "start" : 1756580100938,
          "stop" : 1756580101103,
          "duration" : 165
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "83cbae7bed21a749",
          "name" : "Request",
          "source" : "83cbae7bed21a749.html",
          "type" : "text/html",
          "size" : 1687
        }, {
          "uid" : "784c6fba213e5c65",
          "name" : "Response text 200",
          "source" : "784c6fba213e5c65.txt",
          "type" : "text/plain",
          "size" : 2897
        }, {
          "uid" : "ff735ce148286a29",
          "name" : "Response headers 200",
          "source" : "ff735ce148286a29.json",
          "type" : "application/json",
          "size" : 526
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 3,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "POST /login",
        "time" : {
          "start" : 1756580101119,
          "stop" : 1756580101610,
          "duration" : 491
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "438ccc33794208ec",
          "name" : "Request",
          "source" : "438ccc33794208ec.html",
          "type" : "text/html",
          "size" : 1867
        }, {
          "uid" : "5299998e5b7ef734",
          "name" : "Response text 200",
          "source" : "5299998e5b7ef734.txt",
          "type" : "text/plain",
          "size" : 417
        }, {
          "uid" : "c56e294fcd1f6855",
          "name" : "Response headers 200",
          "source" : "c56e294fcd1f6855.json",
          "type" : "application/json",
          "size" : 287
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 3,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "POST /oauth2/token",
        "time" : {
          "start" : 1756580101622,
          "stop" : 1756580101744,
          "duration" : 122
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "aea7099124f91674",
          "name" : "Request",
          "source" : "aea7099124f91674.html",
          "type" : "text/html",
          "size" : 2846
        }, {
          "uid" : "1916a525c6ccb1a0",
          "name" : "Response json 200",
          "source" : "1916a525c6ccb1a0.json",
          "type" : "application/json",
          "size" : 1537
        }, {
          "uid" : "76d5fad8552d88a2",
          "name" : "Response headers 200",
          "source" : "76d5fad8552d88a2.json",
          "type" : "application/json",
          "size" : 440
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 3,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "username",
        "value" : "'niffler_qa'"
      }, {
        "name" : "password",
        "value" : "'password'"
      } ],
      "stepsCount" : 3,
      "attachmentsCount" : 9,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 15,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "[S] Auth Client",
    "time" : {
      "start" : 1756580100033,
      "stop" : 1756580100034,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "[S] Auth Db",
    "time" : {
      "start" : 1756580100097,
      "stop" : 1756580100098,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "[S] Spends Client",
    "time" : {
      "start" : 1756580101745,
      "stop" : 1756580101745,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "[S]  Session Faker",
    "time" : {
      "start" : 1756580099907,
      "stop" : 1756580100010,
      "duration" : 103
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "[S] Cleanup",
    "time" : {
      "start" : 1756580100098,
      "stop" : 1756580100599,
      "duration" : 501
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "[S] Server Envs",
    "time" : {
      "start" : 1756580100018,
      "stop" : 1756580100033,
      "duration" : 15
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "c5f6a6959c0604ce",
      "name" : "server_envs.json",
      "source" : "c5f6a6959c0604ce.json",
      "type" : "application/json",
      "size" : 582
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "[S] Lock Manager",
    "time" : {
      "start" : 1756580100034,
      "stop" : 1756580100034,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "skipped",
    "statusMessage" : "XFAIL spendDate записывается в БД с ошибкой, добавляется +1 день\n\nAssertionError: assert datetime.date(2009, 10, 14) == datetime.date(2009, 10, 13)\n +  where datetime.date(2009, 10, 14) = Spend(id=UUID('6ddf810c-f660-4cb1-b052-8d387d4ad011'), description='Уникальные шляпы', spend_date=datetime.date(2009, 10, 14), amount=1000.26, username='niffler_qa', category_id=UUID('11fea4a0-f4a8-4a68-bfbb-d582108a4bee'), currency='RUB').spend_date\n +  and   datetime.date(2009, 10, 13) = <built-in method date of datetime.datetime object at 0x7f0470659500>()\n +    where <built-in method date of datetime.datetime object at 0x7f0470659500> = datetime.datetime(2009, 10, 13, 22, 5, 31, tzinfo=datetime.timezone.utc).date\n +      where datetime.datetime(2009, 10, 13, 22, 5, 31, tzinfo=datetime.timezone.utc) = <built-in method fromisoformat of type object at 0x7f047533b020>('2009-10-13T22:05:31.000+00:00')\n +        where <built-in method fromisoformat of type object at 0x7f047533b020> = datetime.fromisoformat\n +        and   '2009-10-13T22:05:31.000+00:00' = SpendAdd(id=None, amount=1000.26, description='Уникальные шляпы', category=CategoryAdd(id=None, name='Уникальное', username=None, archived=False), spendDate='2009-10-13T22:05:31.000+00:00', currency='RUB', username='niffler_qa').spendDate",
    "statusTrace" : "self = <tests.database.test_spendings_db.TestSpendingsDatabase object at 0x7f04707f25d0>\nspends_client = <clients.spends_client.SpendsClient object at 0x7f047263d010>\nspending_data = SpendAdd(id=None, amount=1000.26, description='Уникальные шляпы', category=CategoryAdd(id=None, name='Уникальное', username=None, archived=False), spendDate='2009-10-13T22:05:31.000+00:00', currency='RUB', username='niffler_qa')\nspends_db = <databases.spends_db.SpendsDb object at 0x7f047044be00>\n\n    @TestData.spending_data([\n        SpendAdd(\n            amount=1000.26,\n            category=CategoryAdd(name=\"Уникальное\"),\n            currency=\"RUB\",\n            description=\"Уникальные шляпы\",\n            spendDate=\"2009-10-13T22:05:31.000+00:00\"\n        )\n    ])\n    @pytest.mark.xfail(reason=\"spendDate записывается в БД с ошибкой, добавляется +1 день\")\n    @allure.story(Story.add_spending)\n    def test_added_spending_in_database(\n        self,\n        spends_client: SpendsClient,\n        spending_data: SpendAdd,\n        spends_db: SpendsDb\n    ):\n        added_spending = spends_client.add_spending(data=spending_data)\n        user_spending = spends_db.get_spending_by_id(id=added_spending.id)\n        with allure.step(f\"Проверка, что расход есть в базе данных\"):\n            assert user_spending is not None\n            assert user_spending.amount == spending_data.amount\n            assert user_spending.currency == spending_data.currency\n            assert user_spending.description == spending_data.description\n>           assert user_spending.spend_date == datetime.fromisoformat(spending_data.spendDate).date()\nE           AssertionError: assert datetime.date(2009, 10, 14) == datetime.date(2009, 10, 13)\nE            +  where datetime.date(2009, 10, 14) = Spend(id=UUID('6ddf810c-f660-4cb1-b052-8d387d4ad011'), description='Уникальные шляпы', spend_date=datetime.date(2009, 10, 14), amount=1000.26, username='niffler_qa', category_id=UUID('11fea4a0-f4a8-4a68-bfbb-d582108a4bee'), currency='RUB').spend_date\nE            +  and   datetime.date(2009, 10, 13) = <built-in method date of datetime.datetime object at 0x7f0470659500>()\nE            +    where <built-in method date of datetime.datetime object at 0x7f0470659500> = datetime.datetime(2009, 10, 13, 22, 5, 31, tzinfo=datetime.timezone.utc).date\nE            +      where datetime.datetime(2009, 10, 13, 22, 5, 31, tzinfo=datetime.timezone.utc) = <built-in method fromisoformat of type object at 0x7f047533b020>('2009-10-13T22:05:31.000+00:00')\nE            +        where <built-in method fromisoformat of type object at 0x7f047533b020> = datetime.fromisoformat\nE            +        and   '2009-10-13T22:05:31.000+00:00' = SpendAdd(id=None, amount=1000.26, description='Уникальные шляпы', category=CategoryAdd(id=None, name='Уникальное', username=None, archived=False), spendDate='2009-10-13T22:05:31.000+00:00', currency='RUB', username='niffler_qa').spendDate\n\ntests/database/test_spendings_db.py:50: AssertionError",
    "steps" : [ {
      "name" : "API Добавление траты",
      "time" : {
        "start" : 1756580102548,
        "stop" : 1756580102689,
        "duration" : 141
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "POST /api/spends/add",
        "time" : {
          "start" : 1756580102555,
          "stop" : 1756580102688,
          "duration" : 133
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "45783eff1869eaac",
          "name" : "Request",
          "source" : "45783eff1869eaac.html",
          "type" : "text/html",
          "size" : 4556
        }, {
          "uid" : "d6f19fa9d5d75b98",
          "name" : "Response json 201",
          "source" : "d6f19fa9d5d75b98.json",
          "type" : "application/json",
          "size" : 511
        }, {
          "uid" : "d619061a3eb96a73",
          "name" : "Response headers 201",
          "source" : "d619061a3eb96a73.json",
          "type" : "application/json",
          "size" : 490
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 3,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "data",
        "value" : "SpendAdd(id=None, amount=1000.26, description='Уникальные шляпы', category=CategoryAdd(id=None, name='Уникальное', username=None, archived=False), spendDate='2009-10-13T22:05:31.000+00:00', currency='RUB', username=None)"
      } ],
      "stepsCount" : 1,
      "attachmentsCount" : 3,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Проверка, что расход есть в базе данных",
      "time" : {
        "start" : 1756580102692,
        "stop" : 1756580102692,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert datetime.date(2009, 10, 14) == datetime.date(2009, 10, 13)\n +  where datetime.date(2009, 10, 14) = Spend(id=UUID('6ddf810c-f660-4cb1-b052-8d387d4ad011'), description='Уникальные шляпы', spend_date=datetime.date(2009, 10, 14), amount=1000.26, username='niffler_qa', category_id=UUID('11fea4a0-f4a8-4a68-bfbb-d582108a4bee'), currency='RUB').spend_date\n +  and   datetime.date(2009, 10, 13) = <built-in method date of datetime.datetime object at 0x7f0470659500>()\n +    where <built-in method date of datetime.datetime object at 0x7f0470659500> = datetime.datetime(2009, 10, 13, 22, 5, 31, tzinfo=datetime.timezone.utc).date\n +      where datetime.datetime(2009, 10, 13, 22, 5, 31, tzinfo=datetime.timezone.utc) = <built-in method fromisoformat of type object at 0x7f047533b020>('2009-10-13T22:05:31.000+00:00')\n +        where <built-in method fromisoformat of type object at 0x7f047533b020> = datetime.fromisoformat\n +        and   '2009-10-13T22:05:31.000+00:00' = SpendAdd(id=None, amount=1000.26, description='Уникальные шляпы', category=CategoryAdd(id=None, name='Уникальное', username=None, archived=False), spendDate='2009-10-13T22:05:31.000+00:00', currency='RUB', username='niffler_qa').spendDate\n",
      "statusTrace" : "  File \"/home/runner/work/niffler-py-st3/niffler-py-st3/niffler-python-tests/tests/database/test_spendings_db.py\", line 50, in test_added_spending_in_database\n    assert user_spending.spend_date == datetime.fromisoformat(spending_data.spendDate).date()\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "a0cd752d06ed9781",
      "name" : "SELECT niffler-spend",
      "source" : "a0cd752d06ed9781.txt",
      "type" : "text/plain",
      "size" : 184
    }, {
      "uid" : "aec434f5719f0819",
      "name" : "log",
      "source" : "aec434f5719f0819.txt",
      "type" : "text/plain",
      "size" : 243
    } ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 5,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "auth_api_token::0",
    "time" : {
      "start" : 1756580169813,
      "stop" : 1756580169813,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "auth_client::0",
    "time" : {
      "start" : 1756580169820,
      "stop" : 1756580169821,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "spends_client::0",
    "time" : {
      "start" : 1756580169812,
      "stop" : 1756580169812,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "cleanup::0",
    "time" : {
      "start" : 1756580169817,
      "stop" : 1756580169817,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Add spendings"
  }, {
    "name" : "feature",
    "value" : "Spendings"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.xfail(reason='spendDate записывается в БД с ошибкой, добавляется +1 день')"
  }, {
    "name" : "tag",
    "value" : "database"
  }, {
    "name" : "tag",
    "value" : "spendings"
  }, {
    "name" : "host",
    "value" : "pkrvmccyg1gnepe"
  }, {
    "name" : "thread",
    "value" : "7038-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.database.test_spendings_db"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "spending_data",
    "value" : "SpendAdd(id=None, amount=1000.26, description='Уникальные шляпы', category=CategoryAdd(id=None, name='Уникальное', username=None, archived=False), spendDate='2009-10-13T22:05:31.000+00:00', currency='RUB', username=None)"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 2,
        "passed" : 0,
        "unknown" : 0,
        "total" : 2
      },
      "items" : [ {
        "uid" : "d2b6cc597a7ce14",
        "reportUrl" : "https://illusionx11.github.io/niffler-py-st3/9/#testresult/d2b6cc597a7ce14",
        "status" : "skipped",
        "statusDetails" : "XFAIL spendDate записывается в БД с ошибкой, добавляется +1 день\n\nAssertionError: assert datetime.date(2009, 10, 14) == datetime.date(2009, 10, 13)\n +  where datetime.date(2009, 10, 14) = Spend(amount=1000.26, username='niffler_qa', category_id=UUID('b91f24c6-d4a0-4a19-9c91-89b941fff6f5'), currency='RUB', description='Уникальные шляпы', id=UUID('9a535dbd-7df0-4df2-86a0-7a208c4719b1'), spend_date=datetime.date(2009, 10, 14)).spend_date\n +  and   datetime.date(2009, 10, 13) = <built-in method date of datetime.datetime object at 0x7f441b9e1f80>()\n +    where <built-in method date of datetime.datetime object at 0x7f441b9e1f80> = datetime.datetime(2009, 10, 13, 22, 5, 31, tzinfo=datetime.timezone.utc).date\n +      where datetime.datetime(2009, 10, 13, 22, 5, 31, tzinfo=datetime.timezone.utc) = <built-in method fromisoformat of type object at 0x7f4424034020>('2009-10-13T22:05:31.000+00:00')\n +        where <built-in method fromisoformat of type object at 0x7f4424034020> = datetime.fromisoformat\n +        and   '2009-10-13T22:05:31.000+00:00' = SpendAdd(id=None, amount=1000.26, description='Уникальные шляпы', category=CategoryAdd(id=None, name='Уникальное', username=None, archived=False), spendDate='2009-10-13T22:05:31.000+00:00', currency='RUB', username='niffler_qa').spendDate",
        "time" : {
          "start" : 1755396901709,
          "stop" : 1755396901968,
          "duration" : 259
        }
      } ]
    },
    "tags" : [ "spendings", "database", "@pytest.mark.xfail(reason='spendDate записывается в БД с ошибкой, добавляется +1 день')" ]
  },
  "source" : "f65ced23275cdd80.json",
  "parameterValues" : [ "SpendAdd(id=None, amount=1000.26, description='Уникальные шляпы', category=CategoryAdd(id=None, name='Уникальное', username=None, archived=False), spendDate='2009-10-13T22:05:31.000+00:00', currency='RUB', username=None)" ]
}