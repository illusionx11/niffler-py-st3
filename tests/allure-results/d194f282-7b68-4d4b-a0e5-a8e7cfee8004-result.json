{"name": "Add Incorrect Category[Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa]", "status": "skipped", "statusDetails": {"message": "XFAIL Появляется сайдбар вместо сообщения под input\n\nselenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"span.input__helper-text\"}\n  (Session info: chrome=135.0.7049.52); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x55ff7876ae6a <unknown>\n#1 0x55ff7821c640 <unknown>\n#2 0x55ff7826db5a <unknown>\n#3 0x55ff7826dd51 <unknown>\n#4 0x55ff78261606 <unknown>\n#5 0x55ff7829377d <unknown>\n#6 0x55ff782614fa <unknown>\n#7 0x55ff7829391e <unknown>\n#8 0x55ff782b97b5 <unknown>\n#9 0x55ff78293523 <unknown>\n#10 0x55ff7825fef3 <unknown>\n#11 0x55ff78260b51 <unknown>\n#12 0x55ff7872fd2b <unknown>\n#13 0x55ff78733c01 <unknown>\n#14 0x55ff78717512 <unknown>\n#15 0x55ff78734774 <unknown>\n#16 0x55ff786fb90f <unknown>\n#17 0x55ff78758fb8 <unknown>\n#18 0x55ff78759196 <unknown>\n#19 0x55ff78769cb6 <unknown>\n#20 0x7fe4e1562ac3 <unknown>", "trace": "self = <tests.test_profile.TestProfileCategories object at 0x7ff129028370>, profile_page = <tests.pages.profile_page.ProfilePage object at 0x7ff128f1ead0>\ndirect_category = 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n\n    @TestData.direct_category([\"a\", pytest.param(\"a\"*51, marks=pytest.mark.xfail(reason=\"Появляется сайдбар вместо сообщения под input\"))])\n    @allure.story(Story.errors)\n    def test_add_incorrect_category(self, profile_page: ProfilePage, direct_category: str):\n        profile_page.open()\n        profile_page.should_be_profile_page()\n        profile_page.add_new_category(direct_category)\n        errors = {\n            \"category_length\": [ValidationErrors.CATEGORY_LENGTH]\n        }\n        time.sleep(0.3) # плохая практика, но без этого иногда ловится StaleElementReferenceException\n>       profile_page.should_be_errors_in_validation(errors=errors)\n\ntest_profile.py:113: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/profile_page.py:82: in should_be_errors_in_validation\n    category_error = category_parent.find_element(By.CSS_SELECTOR, \"span.input__helper-text\")\nvenv/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:601: in find_element\n    return self._execute(Command.FIND_CHILD_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:572: in _execute\n    return self._parent.execute(command, params)\nvenv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff128f1d960>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#18 0x55ff78759196 \\\\u003Cunknown>\\\\n#19 0x55ff78769cb6 \\\\u003Cunknown>\\\\n#20 0x7fe4e1562ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"span.input__helper-text\"}\nE         (Session info: chrome=135.0.7049.52); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x55ff7876ae6a <unknown>\nE       #1 0x55ff7821c640 <unknown>\nE       #2 0x55ff7826db5a <unknown>\nE       #3 0x55ff7826dd51 <unknown>\nE       #4 0x55ff78261606 <unknown>\nE       #5 0x55ff7829377d <unknown>\nE       #6 0x55ff782614fa <unknown>\nE       #7 0x55ff7829391e <unknown>\nE       #8 0x55ff782b97b5 <unknown>\nE       #9 0x55ff78293523 <unknown>\nE       #10 0x55ff7825fef3 <unknown>\nE       #11 0x55ff78260b51 <unknown>\nE       #12 0x55ff7872fd2b <unknown>\nE       #13 0x55ff78733c01 <unknown>\nE       #14 0x55ff78717512 <unknown>\nE       #15 0x55ff78734774 <unknown>\nE       #16 0x55ff786fb90f <unknown>\nE       #17 0x55ff78758fb8 <unknown>\nE       #18 0x55ff78759196 <unknown>\nE       #19 0x55ff78769cb6 <unknown>\nE       #20 0x7fe4e1562ac3 <unknown>\n\nvenv/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:232: NoSuchElementException"}, "steps": [{"name": "Открыть страницу", "status": "passed", "start": 1745171253877, "stop": 1745171253925}, {"name": "Проверка на валидность страницы профиля", "status": "passed", "steps": [{"name": "Проврека на присутствие элемента", "status": "passed", "steps": [{"name": "Проверка на наличие объекта", "status": "passed", "parameters": [{"name": "by", "value": "'xpath'"}, {"name": "locator", "value": "'//h2[contains(text(), 'Profile')]'"}], "start": 1745171253925, "stop": 1745171254003}], "parameters": [{"name": "locator", "value": "('xpath', \"//h2[contains(text(), 'Profile')]\")"}], "start": 1745171253925, "stop": 1745171254003}, {"name": "Проврека на присутствие элемента", "status": "passed", "steps": [{"name": "Проверка на наличие объекта", "status": "passed", "parameters": [{"name": "by", "value": "'xpath'"}, {"name": "locator", "value": "'//h2[contains(text(), 'Categories')]'"}], "start": 1745171254003, "stop": 1745171254009}], "parameters": [{"name": "locator", "value": "('xpath', \"//h2[contains(text(), 'Categories')]\")"}], "start": 1745171254003, "stop": 1745171254009}, {"name": "Проврека на присутствие элемента", "status": "passed", "steps": [{"name": "Проверка на наличие объекта", "status": "passed", "parameters": [{"name": "by", "value": "'css selector'"}, {"name": "locator", "value": "'input[placeholder='Add new category']'"}], "start": 1745171254009, "stop": 1745171254014}], "parameters": [{"name": "locator", "value": "('css selector', \"input[placeholder='Add new category']\")"}], "start": 1745171254009, "stop": 1745171254014}, {"name": "Проверка на наличие строки в URL", "status": "passed", "parameters": [{"name": "arg", "value": "'profile'"}], "start": 1745171254014, "stop": 1745171254018}], "start": 1745171253925, "stop": 1745171254018}, {"name": "Добавление новой категории", "status": "passed", "steps": [{"name": "Очистить поле input", "status": "passed", "parameters": [{"name": "element", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"c900fa47a639d978ba6afec9e239f809\", element=\"f.D72BEAB3F0E9C4607F27FDFD599A829F.d.CA168CF9644B3B3C62B2719C0B18BB84.e.282\")>"}], "start": 1745171254023, "stop": 1745171254073}], "parameters": [{"name": "name", "value": "'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'"}], "start": 1745171254019, "stop": 1745171254156}, {"name": "Проверка на наличие ошибок валидации", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"span.input__helper-text\"}\n  (Session info: chrome=135.0.7049.52); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x55ff7876ae6a <unknown>\n#1 0x55ff7821c640 <unknown>\n#2 0x55ff7826db5a <unknown>\n#3 0x55ff7826dd51 <unknown>\n#4 0x55ff78261606 <unknown>\n#5 0x55ff7829377d <unknown>\n#6 0x55ff782614fa <unknown>\n#7 0x55ff7829391e <unknown>\n#8 0x55ff782b97b5 <unknown>\n#9 0x55ff78293523 <unknown>\n#10 0x55ff7825fef3 <unknown>\n#11 0x55ff78260b51 <unknown>\n#12 0x55ff7872fd2b <unknown>\n#13 0x55ff78733c01 <unknown>\n#14 0x55ff78717512 <unknown>\n#15 0x55ff78734774 <unknown>\n#16 0x55ff786fb90f <unknown>\n#17 0x55ff78758fb8 <unknown>\n#18 0x55ff78759196 <unknown>\n#19 0x55ff78769cb6 <unknown>\n#20 0x7fe4e1562ac3 <unknown>\n\n", "trace": "  File \"/home/ilya/niffler-py-st3/tests/venv/lib/python3.10/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/home/ilya/niffler-py-st3/tests/pages/profile_page.py\", line 82, in should_be_errors_in_validation\n    category_error = category_parent.find_element(By.CSS_SELECTOR, \"span.input__helper-text\")\n  File \"/home/ilya/niffler-py-st3/tests/venv/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 601, in find_element\n    return self._execute(Command.FIND_CHILD_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n  File \"/home/ilya/niffler-py-st3/tests/venv/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 572, in _execute\n    return self._parent.execute(command, params)\n  File \"/home/ilya/niffler-py-st3/tests/venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n  File \"/home/ilya/niffler-py-st3/tests/venv/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "errors", "value": "{'category_length': ['Allowed category length is from 2 to 50 symbols']}"}], "start": 1745171254457, "stop": 1745171258478}], "parameters": [{"name": "direct_category", "value": "'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'"}], "start": 1745171253877, "stop": 1745171258478, "uuid": "600b286a-f05d-4bb7-ae8d-0788eaad301a", "historyId": "ca4ba1bc83f1b09d895c4595f84696ca", "testCaseId": "c7b4c9575867938a332f722f3cc88a60", "fullName": "tests.test_profile.TestProfileCategories#test_add_incorrect_category", "labels": [{"name": "story", "value": "Errors validation"}, {"name": "feature", "value": "Categories"}, {"name": "tag", "value": "@pytest.mark.xfail(reason='Появляется сайдбар вместо сообщения под input')"}, {"name": "tag", "value": "categories"}, {"name": "tag", "value": "profile"}, {"name": "host", "value": "nts"}, {"name": "thread", "value": "42567-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_profile"}]}