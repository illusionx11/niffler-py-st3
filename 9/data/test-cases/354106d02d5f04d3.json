{
  "uid" : "354106d02d5f04d3",
  "name" : "Calculate Rate  With Negative Amount[-200.0]",
  "fullName" : "tests.grpc.test_calculate_rate.TestCalculateRate#test_calculate_rate__with_negative_amount",
  "historyId" : "d62afd52c52dc552bc3317effd272470",
  "time" : {
    "start" : 1755396902652,
    "stop" : 1755396902659,
    "duration" : 7
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL reason: Негативные значения должны возвращать 0.0\n\n_pytest.outcomes.XFailed: Негативные значения должны возвращать 0.0",
  "statusTrace" : "self = <tests.grpc.test_calculate_rate.TestCalculateRate object at 0x7f441bd51700>\ngrpc_client = <internal.pb.niffler_currency_pb2_pbreflect.NifflerCurrencyServiceClient object at 0x7f441b8b0440>\namount = -200.0, mock = False\n\n    @pytest.mark.parametrize(\"amount\", [-100.0, -200.0, -345.0])\n    def test_calculate_rate__with_negative_amount(\n        self,\n        grpc_client: NifflerCurrencyServiceClient,\n        amount: float,\n        mock: bool\n    ):\n        try:\n            response = grpc_client.calculate_rate(\n                request=CalculateRequest(\n                    spendCurrency=CurrencyValues.EUR,\n                    desiredCurrency=CurrencyValues.RUB,\n                    amount=amount\n                )\n            )\n            # Логика для основного сервера\n            with allure.step(\"Проверка расчета курса\"):\n>               assert response.calculatedAmount == 0.0\nE               assert -14400.0 == 0.0\nE                +  where -14400.0 = calculatedAmount: -14400\\n.calculatedAmount\n\ntests/grpc/test_calculate_rate.py:194: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.grpc.test_calculate_rate.TestCalculateRate object at 0x7f441bd51700>\ngrpc_client = <internal.pb.niffler_currency_pb2_pbreflect.NifflerCurrencyServiceClient object at 0x7f441b8b0440>\namount = -200.0, mock = False\n\n    @pytest.mark.parametrize(\"amount\", [-100.0, -200.0, -345.0])\n    def test_calculate_rate__with_negative_amount(\n        self,\n        grpc_client: NifflerCurrencyServiceClient,\n        amount: float,\n        mock: bool\n    ):\n        try:\n            response = grpc_client.calculate_rate(\n                request=CalculateRequest(\n                    spendCurrency=CurrencyValues.EUR,\n                    desiredCurrency=CurrencyValues.RUB,\n                    amount=amount\n                )\n            )\n            # Логика для основного сервера\n            with allure.step(\"Проверка расчета курса\"):\n                assert response.calculatedAmount == 0.0\n        except AssertionError:\n            if not mock:\n>               pytest.xfail(reason=\"Негативные значения должны возвращать 0.0\")\nE               _pytest.outcomes.XFailed: Негативные значения должны возвращать 0.0\n\ntests/grpc/test_calculate_rate.py:197: XFailed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "[S] Mock",
    "time" : {
      "start" : 1755396902167,
      "stop" : 1755396902167,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "[S] Spends Db",
    "time" : {
      "start" : 1755396899267,
      "stop" : 1755396899327,
      "duration" : 60
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "[S] Userdata Db",
    "time" : {
      "start" : 1755396899328,
      "stop" : 1755396899328,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "[S] Auth Db",
    "time" : {
      "start" : 1755396899327,
      "stop" : 1755396899328,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "[S] Client Envs",
    "time" : {
      "start" : 1755396899262,
      "stop" : 1755396899263,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "3bb824020de3ee7e",
      "name" : "client_envs.json",
      "source" : "3bb824020de3ee7e.json",
      "type" : "application/json",
      "size" : 66
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "[S] Auth Client",
    "time" : {
      "start" : 1755396899266,
      "stop" : 1755396899266,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "[S] Cleanup",
    "time" : {
      "start" : 1755396899328,
      "stop" : 1755396899834,
      "duration" : 506
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "[S] Grpc Client",
    "time" : {
      "start" : 1755396902167,
      "stop" : 1755396902174,
      "duration" : 7
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "[S] Lock Manager",
    "time" : {
      "start" : 1755396899266,
      "stop" : 1755396899266,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "[S] Auth Api Token",
    "time" : {
      "start" : 1755396899834,
      "stop" : 1755396900879,
      "duration" : 1045
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "API Регистрация пользователя",
      "time" : {
        "start" : 1755396899834,
        "stop" : 1755396900116,
        "duration" : 282
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "GET /register",
        "time" : {
          "start" : 1755396899850,
          "stop" : 1755396899891,
          "duration" : 41
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "aaaf20300daf91ab",
          "name" : "Request",
          "source" : "aaaf20300daf91ab.html",
          "type" : "text/html",
          "size" : 1353
        }, {
          "uid" : "64a95c8ba040708a",
          "name" : "Response text 200",
          "source" : "64a95c8ba040708a.txt",
          "type" : "text/plain",
          "size" : 3731
        }, {
          "uid" : "c8668b3a48082df2",
          "name" : "Response headers 200",
          "source" : "c8668b3a48082df2.json",
          "type" : "application/json",
          "size" : 603
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 3,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "POST /register",
        "time" : {
          "start" : 1755396899898,
          "stop" : 1755396900116,
          "duration" : 218
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "2e3447da03cc519",
          "name" : "Request",
          "source" : "2e3447da03cc519.html",
          "type" : "text/html",
          "size" : 2184
        }, {
          "uid" : "666edce2646432ba",
          "name" : "Response text 400",
          "source" : "666edce2646432ba.txt",
          "type" : "text/plain",
          "size" : 3800
        }, {
          "uid" : "301d0a59f4ac2f0b",
          "name" : "Response headers 400",
          "source" : "301d0a59f4ac2f0b.json",
          "type" : "application/json",
          "size" : 553
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 3,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "username",
        "value" : "'niffler_qa'"
      }, {
        "name" : "password",
        "value" : "'password'"
      } ],
      "stepsCount" : 2,
      "attachmentsCount" : 6,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "API Авторизация и получение токена",
      "time" : {
        "start" : 1755396900116,
        "stop" : 1755396900879,
        "duration" : 763
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "GET /oauth2/authorize",
        "time" : {
          "start" : 1755396900128,
          "stop" : 1755396900210,
          "duration" : 82
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "c03e7aa4f61d9412",
          "name" : "Request",
          "source" : "c03e7aa4f61d9412.html",
          "type" : "text/html",
          "size" : 1687
        }, {
          "uid" : "fb38624aa6ac98e8",
          "name" : "Response text 200",
          "source" : "fb38624aa6ac98e8.txt",
          "type" : "text/plain",
          "size" : 2897
        }, {
          "uid" : "c6dc972ec0d7c396",
          "name" : "Response headers 200",
          "source" : "c6dc972ec0d7c396.json",
          "type" : "application/json",
          "size" : 526
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 3,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "POST /login",
        "time" : {
          "start" : 1755396900226,
          "stop" : 1755396900745,
          "duration" : 519
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "b174ce5e3252cdac",
          "name" : "Request",
          "source" : "b174ce5e3252cdac.html",
          "type" : "text/html",
          "size" : 1867
        }, {
          "uid" : "73448a556f73673",
          "name" : "Response text 200",
          "source" : "73448a556f73673.txt",
          "type" : "text/plain",
          "size" : 417
        }, {
          "uid" : "34fe99632ff10920",
          "name" : "Response headers 200",
          "source" : "34fe99632ff10920.json",
          "type" : "application/json",
          "size" : 287
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 3,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "POST /oauth2/token",
        "time" : {
          "start" : 1755396900754,
          "stop" : 1755396900879,
          "duration" : 125
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "4d3694558cd48238",
          "name" : "Request",
          "source" : "4d3694558cd48238.html",
          "type" : "text/html",
          "size" : 2846
        }, {
          "uid" : "abe0fec66fa9c84f",
          "name" : "Response json 200",
          "source" : "abe0fec66fa9c84f.json",
          "type" : "application/json",
          "size" : 1537
        }, {
          "uid" : "1a524737339b232c",
          "name" : "Response headers 200",
          "source" : "1a524737339b232c.json",
          "type" : "application/json",
          "size" : 440
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 3,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "username",
        "value" : "'niffler_qa'"
      }, {
        "name" : "password",
        "value" : "'password'"
      } ],
      "stepsCount" : 3,
      "attachmentsCount" : 9,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 15,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "[S]  Session Faker",
    "time" : {
      "start" : 1755396899163,
      "stop" : 1755396899262,
      "duration" : 99
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "[S] Server Envs",
    "time" : {
      "start" : 1755396899263,
      "stop" : 1755396899266,
      "duration" : 3
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "266f639452b7c2f1",
      "name" : "server_envs.json",
      "source" : "266f639452b7c2f1.json",
      "type" : "application/json",
      "size" : 582
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "status" : "skipped",
    "statusMessage" : "XFAIL reason: Негативные значения должны возвращать 0.0\n\n_pytest.outcomes.XFailed: Негативные значения должны возвращать 0.0",
    "statusTrace" : "self = <tests.grpc.test_calculate_rate.TestCalculateRate object at 0x7f441bd51700>\ngrpc_client = <internal.pb.niffler_currency_pb2_pbreflect.NifflerCurrencyServiceClient object at 0x7f441b8b0440>\namount = -200.0, mock = False\n\n    @pytest.mark.parametrize(\"amount\", [-100.0, -200.0, -345.0])\n    def test_calculate_rate__with_negative_amount(\n        self,\n        grpc_client: NifflerCurrencyServiceClient,\n        amount: float,\n        mock: bool\n    ):\n        try:\n            response = grpc_client.calculate_rate(\n                request=CalculateRequest(\n                    spendCurrency=CurrencyValues.EUR,\n                    desiredCurrency=CurrencyValues.RUB,\n                    amount=amount\n                )\n            )\n            # Логика для основного сервера\n            with allure.step(\"Проверка расчета курса\"):\n>               assert response.calculatedAmount == 0.0\nE               assert -14400.0 == 0.0\nE                +  where -14400.0 = calculatedAmount: -14400\\n.calculatedAmount\n\ntests/grpc/test_calculate_rate.py:194: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.grpc.test_calculate_rate.TestCalculateRate object at 0x7f441bd51700>\ngrpc_client = <internal.pb.niffler_currency_pb2_pbreflect.NifflerCurrencyServiceClient object at 0x7f441b8b0440>\namount = -200.0, mock = False\n\n    @pytest.mark.parametrize(\"amount\", [-100.0, -200.0, -345.0])\n    def test_calculate_rate__with_negative_amount(\n        self,\n        grpc_client: NifflerCurrencyServiceClient,\n        amount: float,\n        mock: bool\n    ):\n        try:\n            response = grpc_client.calculate_rate(\n                request=CalculateRequest(\n                    spendCurrency=CurrencyValues.EUR,\n                    desiredCurrency=CurrencyValues.RUB,\n                    amount=amount\n                )\n            )\n            # Логика для основного сервера\n            with allure.step(\"Проверка расчета курса\"):\n                assert response.calculatedAmount == 0.0\n        except AssertionError:\n            if not mock:\n>               pytest.xfail(reason=\"Негативные значения должны возвращать 0.0\")\nE               _pytest.outcomes.XFailed: Негативные значения должны возвращать 0.0\n\ntests/grpc/test_calculate_rate.py:197: XFailed",
    "steps" : [ {
      "name" : "/guru.qa.grpc.niffler.NifflerCurrencyService/CalculateRate",
      "time" : {
        "start" : 1755396902652,
        "stop" : 1755396902658,
        "duration" : 6
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "933609246999a648",
        "name" : "Request",
        "source" : "933609246999a648.json",
        "type" : "application/json",
        "size" : 76
      }, {
        "uid" : "7867c2d2bc0e5673",
        "name" : "Response",
        "source" : "7867c2d2bc0e5673.json",
        "type" : "application/json",
        "size" : 34
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Проверка расчета курса",
      "time" : {
        "start" : 1755396902658,
        "stop" : 1755396902659,
        "duration" : 1
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert -14400.0 == 0.0\n +  where -14400.0 = calculatedAmount: -14400\\n.calculatedAmount\n",
      "statusTrace" : "  File \"/home/runner/work/niffler-py-st3/niffler-py-st3/niffler-python-tests/tests/grpc/test_calculate_rate.py\", line 194, in test_calculate_rate__with_negative_amount\n    assert response.calculatedAmount == 0.0\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "auth_client::0",
    "time" : {
      "start" : 1755396970929,
      "stop" : 1755396970929,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "cleanup::0",
    "time" : {
      "start" : 1755396970927,
      "stop" : 1755396970927,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "auth_api_token::0",
    "time" : {
      "start" : 1755396970926,
      "stop" : 1755396970926,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Calculate rate"
  }, {
    "name" : "feature",
    "value" : "Currencies"
  }, {
    "name" : "tag",
    "value" : "currencies"
  }, {
    "name" : "tag",
    "value" : "grpc"
  }, {
    "name" : "host",
    "value" : "pkrvmubgrv54qmi"
  }, {
    "name" : "thread",
    "value" : "6958-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.grpc.test_calculate_rate"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "amount",
    "value" : "-200.0"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "tags" : [ "grpc", "currencies" ]
  },
  "source" : "354106d02d5f04d3.json",
  "parameterValues" : [ "-200.0" ]
}