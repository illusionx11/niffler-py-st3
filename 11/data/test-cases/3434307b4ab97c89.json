{
  "uid" : "3434307b4ab97c89",
  "name" : "Calculate Rate  With Negative Amount[-345.0]",
  "fullName" : "tests.grpc.test_calculate_rate.TestCalculateRate#test_calculate_rate__with_negative_amount",
  "historyId" : "b22a4a88264f28ad86e63d7ce592aac1",
  "time" : {
    "start" : 1756634819685,
    "stop" : 1756634819692,
    "duration" : 7
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL reason: Негативные значения должны возвращать 0.0\n\n_pytest.outcomes.XFailed: Негативные значения должны возвращать 0.0",
  "statusTrace" : "self = <tests.grpc.test_calculate_rate.TestCalculateRate object at 0x7fae0e448cd0>\ngrpc_client = <internal.pb.niffler_currency_pb2_pbreflect.NifflerCurrencyServiceClient object at 0x7fae0df4c1a0>\namount = -345.0, mock = False\n\n    @pytest.mark.parametrize(\"amount\", [-100.0, -200.0, -345.0])\n    def test_calculate_rate__with_negative_amount(\n        self,\n        grpc_client: NifflerCurrencyServiceClient,\n        amount: float,\n        mock: bool\n    ):\n        try:\n            response = grpc_client.calculate_rate(\n                request=CalculateRequest(\n                    spendCurrency=CurrencyValues.EUR,\n                    desiredCurrency=CurrencyValues.RUB,\n                    amount=amount\n                )\n            )\n            # Логика для основного сервера\n            with allure.step(\"Проверка расчета курса\"):\n>               assert response.calculatedAmount == 0.0\nE               assert -24840.0 == 0.0\nE                +  where -24840.0 = calculatedAmount: -24840\\n.calculatedAmount\n\ntests/grpc/test_calculate_rate.py:193: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.grpc.test_calculate_rate.TestCalculateRate object at 0x7fae0e448cd0>\ngrpc_client = <internal.pb.niffler_currency_pb2_pbreflect.NifflerCurrencyServiceClient object at 0x7fae0df4c1a0>\namount = -345.0, mock = False\n\n    @pytest.mark.parametrize(\"amount\", [-100.0, -200.0, -345.0])\n    def test_calculate_rate__with_negative_amount(\n        self,\n        grpc_client: NifflerCurrencyServiceClient,\n        amount: float,\n        mock: bool\n    ):\n        try:\n            response = grpc_client.calculate_rate(\n                request=CalculateRequest(\n                    spendCurrency=CurrencyValues.EUR,\n                    desiredCurrency=CurrencyValues.RUB,\n                    amount=amount\n                )\n            )\n            # Логика для основного сервера\n            with allure.step(\"Проверка расчета курса\"):\n                assert response.calculatedAmount == 0.0\n        except AssertionError:\n            if not mock:\n>               pytest.xfail(reason=\"Негативные значения должны возвращать 0.0\")\nE               _pytest.outcomes.XFailed: Негативные значения должны возвращать 0.0\n\ntests/grpc/test_calculate_rate.py:196: XFailed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "[S] Token Data",
    "time" : {
      "start" : 1756634816753,
      "stop" : 1756634817754,
      "duration" : 1001
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "[S] Mock",
    "time" : {
      "start" : 1756634819216,
      "stop" : 1756634819216,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "[S] Spends Db",
    "time" : {
      "start" : 1756634816194,
      "stop" : 1756634816249,
      "duration" : 55
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "[S] Cleanup",
    "time" : {
      "start" : 1756634816251,
      "stop" : 1756634816752,
      "duration" : 501
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "[S] Userdata Db",
    "time" : {
      "start" : 1756634816250,
      "stop" : 1756634816250,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "[S] Client Envs",
    "time" : {
      "start" : 1756634816250,
      "stop" : 1756634816251,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d61d9fd16cca7c76",
      "name" : "client_envs.json",
      "source" : "d61d9fd16cca7c76.json",
      "type" : "application/json",
      "size" : 66
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "[S] Server Envs",
    "time" : {
      "start" : 1756634816191,
      "stop" : 1756634816193,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "79aae2973057e5f8",
      "name" : "server_envs.json",
      "source" : "79aae2973057e5f8.json",
      "type" : "application/json",
      "size" : 582
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "[S] Lock Manager",
    "time" : {
      "start" : 1756634816190,
      "stop" : 1756634816191,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "[S] Auth Client",
    "time" : {
      "start" : 1756634816752,
      "stop" : 1756634816753,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "[S]  Session Faker",
    "time" : {
      "start" : 1756634816089,
      "stop" : 1756634816190,
      "duration" : 101
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "[S] Auth Db",
    "time" : {
      "start" : 1756634816249,
      "stop" : 1756634816250,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "[S] Grpc Client",
    "time" : {
      "start" : 1756634819216,
      "stop" : 1756634819225,
      "duration" : 9
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "skipped",
    "statusMessage" : "XFAIL reason: Негативные значения должны возвращать 0.0\n\n_pytest.outcomes.XFailed: Негативные значения должны возвращать 0.0",
    "statusTrace" : "self = <tests.grpc.test_calculate_rate.TestCalculateRate object at 0x7fae0e448cd0>\ngrpc_client = <internal.pb.niffler_currency_pb2_pbreflect.NifflerCurrencyServiceClient object at 0x7fae0df4c1a0>\namount = -345.0, mock = False\n\n    @pytest.mark.parametrize(\"amount\", [-100.0, -200.0, -345.0])\n    def test_calculate_rate__with_negative_amount(\n        self,\n        grpc_client: NifflerCurrencyServiceClient,\n        amount: float,\n        mock: bool\n    ):\n        try:\n            response = grpc_client.calculate_rate(\n                request=CalculateRequest(\n                    spendCurrency=CurrencyValues.EUR,\n                    desiredCurrency=CurrencyValues.RUB,\n                    amount=amount\n                )\n            )\n            # Логика для основного сервера\n            with allure.step(\"Проверка расчета курса\"):\n>               assert response.calculatedAmount == 0.0\nE               assert -24840.0 == 0.0\nE                +  where -24840.0 = calculatedAmount: -24840\\n.calculatedAmount\n\ntests/grpc/test_calculate_rate.py:193: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.grpc.test_calculate_rate.TestCalculateRate object at 0x7fae0e448cd0>\ngrpc_client = <internal.pb.niffler_currency_pb2_pbreflect.NifflerCurrencyServiceClient object at 0x7fae0df4c1a0>\namount = -345.0, mock = False\n\n    @pytest.mark.parametrize(\"amount\", [-100.0, -200.0, -345.0])\n    def test_calculate_rate__with_negative_amount(\n        self,\n        grpc_client: NifflerCurrencyServiceClient,\n        amount: float,\n        mock: bool\n    ):\n        try:\n            response = grpc_client.calculate_rate(\n                request=CalculateRequest(\n                    spendCurrency=CurrencyValues.EUR,\n                    desiredCurrency=CurrencyValues.RUB,\n                    amount=amount\n                )\n            )\n            # Логика для основного сервера\n            with allure.step(\"Проверка расчета курса\"):\n                assert response.calculatedAmount == 0.0\n        except AssertionError:\n            if not mock:\n>               pytest.xfail(reason=\"Негативные значения должны возвращать 0.0\")\nE               _pytest.outcomes.XFailed: Негативные значения должны возвращать 0.0\n\ntests/grpc/test_calculate_rate.py:196: XFailed",
    "steps" : [ {
      "name" : "/guru.qa.grpc.niffler.NifflerCurrencyService/CalculateRate",
      "time" : {
        "start" : 1756634819686,
        "stop" : 1756634819692,
        "duration" : 6
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "240cd7a5ed578521",
        "name" : "Request",
        "source" : "240cd7a5ed578521.json",
        "type" : "application/json",
        "size" : 76
      }, {
        "uid" : "939b4c9f2bbfcbc8",
        "name" : "Response",
        "source" : "939b4c9f2bbfcbc8.json",
        "type" : "application/json",
        "size" : 34
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Проверка расчета курса",
      "time" : {
        "start" : 1756634819692,
        "stop" : 1756634819692,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert -24840.0 == 0.0\n +  where -24840.0 = calculatedAmount: -24840\\n.calculatedAmount\n",
      "statusTrace" : "  File \"/home/runner/work/niffler-py-st3/niffler-py-st3/niffler-python-tests/tests/grpc/test_calculate_rate.py\", line 193, in test_calculate_rate__with_negative_amount\n    assert response.calculatedAmount == 0.0\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "11541958748756b9",
      "name" : "log",
      "source" : "11541958748756b9.txt",
      "type" : "text/plain",
      "size" : 248
    } ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "token_data::0",
    "time" : {
      "start" : 1756634892216,
      "stop" : 1756634892217,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "cleanup::0",
    "time" : {
      "start" : 1756634892218,
      "stop" : 1756634892218,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "auth_client::0",
    "time" : {
      "start" : 1756634892217,
      "stop" : 1756634892217,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Calculate rate"
  }, {
    "name" : "feature",
    "value" : "Currencies"
  }, {
    "name" : "tag",
    "value" : "currencies"
  }, {
    "name" : "tag",
    "value" : "grpc"
  }, {
    "name" : "host",
    "value" : "pkrvmccyg1gnepe"
  }, {
    "name" : "thread",
    "value" : "6966-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.grpc.test_calculate_rate"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "amount",
    "value" : "-345.0"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 3,
        "passed" : 0,
        "unknown" : 0,
        "total" : 3
      },
      "items" : [ {
        "uid" : "b4c83a13f4194f3b",
        "reportUrl" : "https://illusionx11.github.io/niffler-py-st3/10/#testresult/b4c83a13f4194f3b",
        "status" : "skipped",
        "statusDetails" : "XFAIL reason: Негативные значения должны возвращать 0.0\n\n_pytest.outcomes.XFailed: Негативные значения должны возвращать 0.0",
        "time" : {
          "start" : 1756580103342,
          "stop" : 1756580103350,
          "duration" : 8
        }
      }, {
        "uid" : "2e9dff6acd9bbef5",
        "reportUrl" : "https://illusionx11.github.io/niffler-py-st3/9/#testresult/2e9dff6acd9bbef5",
        "status" : "skipped",
        "statusDetails" : "XFAIL reason: Негативные значения должны возвращать 0.0\n\n_pytest.outcomes.XFailed: Негативные значения должны возвращать 0.0",
        "time" : {
          "start" : 1755396902670,
          "stop" : 1755396902683,
          "duration" : 13
        }
      } ]
    },
    "tags" : [ "grpc", "currencies" ]
  },
  "source" : "3434307b4ab97c89.json",
  "parameterValues" : [ "-345.0" ]
}